---
import Layout from "../layouts/Layout.astro";
import info from "../data/sample.json"
import Link from "../components/Link.astro";
import Navbar from '../components/Navbar'
---

<Layout title="About Ahmed">
  <div class="bg-tertiary text-primary-800 h-full p-4 relative">
<header class="bg-tertiary w-full relative py-4">
      <div  class="flex justify-center items-center flex-col">

        <div class="w-full flex justify-center items-center h-full flex-col lg:flex-row relative">
         
          
          <div id="title-wrap" class="flex-1 flex justify-center items-center mb-8 lg:mb-0">
            <h1 id="main-title" class="font-mainHead text-4xl sm:text-6xl md:text-8xl lg:text-[10rem] xl:text-[13rem] overflow-hidden flex justify-center items-center cursor-default text-center">
              {info.name.toLocaleUpperCase()}
            </h1>
          </div>

          <!-- Desktop Navigation -->
          <ul id="desktop-nav" class="hidden lg:flex lg:flex-col border-l ml-2 px-4 space-y-4 text-primary-500">
            {info.siteMap.map(page => (
              <li id="page-name" class="font-mainHead hover:text-primary-800 transition-colors hover:underline">
                <Link href={page.path}>{page.pageName}</Link>
              </li>
                ))}
          </ul>
           <Navbar/>
        </div>

<!-- Info Bar -->
  <div class="flex justify-between w-full text-xs sm:text-sm cursor-default ">
    <span id="span-hint" class="text-center">{info.location.city}</span>
    <p id="role" class="tracking-widest text-center px-2">{info.role}</p>
    <span id="span-hint" class="text-center">{info.birthYear}</span>
  </div>

</div>
    <div class="h-screen text-3xl font-headline">jj</div>
    <div class="h-screen">jj</div>
  </div>
</Layout>

<script>
  import {gsap} from "gsap"
  import { SplitText } from "gsap/SplitText"
  import { ScrollTrigger } from "gsap/ScrollTrigger"
  import { ScrollSmoother } from "gsap/ScrollSmoother"

  gsap.registerPlugin(ScrollTrigger,ScrollSmoother,SplitText)

  document.addEventListener('DOMContentLoaded',function(){

    gsap.fromTo('#main-title',
    {x:0},
    {
      x:0,
      duration:5,
      fontSize:'1rem',
      position:'fixed',
      top:8,
      left:12,
      ease: "none",
      background:"#f8f8f8",

      scrollTrigger:
      {
        trigger:'#main-title',
          start: "top 5%",
          end: "bottom 20%",
          scrub: true,
          // markers: true,
      }
      })
      gsap.fromTo('#desktop-nav',
      {x:0},
      {
        x:0,
        duration:5,
        opacity:0,
        ease: "none",
        scrollTrigger:
        {
          trigger:'#desktop-nav',
          start: "top 5%",
            end: "bottom 20%",
            scrub: true,
            // markers: true,
        }
      })
      gsap.fromTo('#menu-btn',
      {x:0,opacity:0},
      {
        x:0,
        duration:5,
        // background:"#f8f8f8",
        opacity:1,
        ease: "none",
        position:'fixed',
        top:8,right:12,
        scrollTrigger:
        {
          trigger:'#menu-btn',
          start: "top 5%",
            end: "bottom 20%",
            scrub: true,
            // markers: true,
        }
      })
    })
        
    const spanHint = new SplitText("#span-hint", { type: "words, chars, lines",
      linesClass: "char",
      mask:'chars'
     });
    const mainTitle = new SplitText("#main-title", { type: "chars", charsClass: "char", mask: "chars" });
 
    const pageName=new SplitText("#page-name",{ type: "lines",
       linesClass: "line",
       mask:'lines'})
     
    const role=new SplitText('#role',{type: "words, chars, lines",
      linesClass: "line",
      mask:'lines'})
      
    const hero=new SplitText('#hero',{type: "words, chars, lines",
      linesClass: "line",
      mask:'lines'})

   
    const heroTimeline = gsap.timeline({ delay:0 });
    
    heroTimeline
    .fromTo('#main-bg',{y:'-100%'},{y:0,duration:2,ease:"none"})
    .fromTo(spanHint.chars, 
      { y: 100, }, 
      { y: 0, duration: 1.5, ease: "power2.out" }, 
      "-=0.5" 
    )
    .fromTo(mainTitle.chars, 
        { y: 300 }, 
        { y: 0,duration: 3, stagger: {each: 0.1, from: "start"},ease:"elastic.out(0.3,0.3)"}
    )
    .fromTo(role.lines,{y:100},{y:0,duration:.1})
    .fromTo(pageName.lines,{x:-100},{x:0, duration:0.3,stagger:0.09})
    // .fromTo(hero.lines,{y:100},{y:0,duration:.5})

</script>